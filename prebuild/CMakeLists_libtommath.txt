cmake_minimum_required(VERSION 3.10)
get_filename_component(CUSTOM_NAME ${CMAKE_CURRENT_SOURCE_DIR} NAME)
project(${CUSTOM_NAME})

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)
set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)

if (MSVC)
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MD /O0")
    set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MT /O2")
    set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /MT /O2")
    set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} /MD /O0")
    set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} /MT /O2")
    set(CMAKE_C_FLAGS_RELWITHDEBINFO "${CMAKE_C_FLAGS_RELWITHDEBINFO} /MT /O2")
endif(MSVC)

set(SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}")
set(HEADERS_DIR "${CMAKE_CURRENT_SOURCE_DIR}")
set(PROJECT_DIRS ${HEADERS_DIR} ${SOURCE_DIR})
FOREACH(PROJECT_DIR ${PROJECT_DIRS})
    include_directories(${PROJECT_DIR})

    file(GLOB SOURCES_ITERATOR "${PROJECT_DIR}/*.c")
    FOREACH(SOURCE ${SOURCES_ITERATOR})
        set(SOURCES ${SOURCES} ${SOURCE})
    ENDFOREACH(SOURCE)

    file(GLOB HEADERS_ITERATOR "${PROJECT_DIR}/*.h")
    FOREACH(HEADER ${HEADERS_ITERATOR})
        set(HEADERS ${HEADERS} ${HEADER})
    ENDFOREACH(HEADER)
ENDFOREACH(PROJECT_DIR)

include_directories(${HEADERS_DIR})
add_library(${PROJECT_NAME} STATIC ${HEADERS} ${SOURCES})

set(PRODUCT_DIR ${CMAKE_CURRENT_BINARY_DIR}/Product)
set_target_properties(${PROJECT_NAME} PROPERTIES ARCHIVE_OUTPUT_DIRECTORY ${PRODUCT_DIR})