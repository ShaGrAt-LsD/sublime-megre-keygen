#pragma once
#include "peparser.h"

#include <array>
#include <cstdint>
#include <fstream>
#include <string>
#include <vector>

class patch
{
public:
	explicit patch(const std::string& Path);	
	void Replace(const std::vector<uint8_t>& data, const std::vector<uint8_t>& patched,
		const std::string& resultFileName);	
	std::vector<uint8_t> GetOldPublicKey() const;
	std::vector<uint8_t> GetNewPublicKey() const;
	static void FixPublicKey();

	void FixPublicKeyPatchCheck();
	~patch() = default;
	patch() = delete;
	patch(const patch&) = delete;
	patch(patch&&) = delete;
	patch& operator=(const patch&) = delete;
	patch& operator=(patch&&) = delete;

private:
	Parser peparser;
	std::vector<uint8_t> fileData;
	static std::string GetFileToPatch();
	uint64_t FindSha256SignatureRawPosition() const;
	uint64_t GetRawSha256Address(uint64_t InitVectorAddress) const;
	void PatchSha256Check(uint64_t CheckOffset);

	const std::array<uint8_t, 160> publicOldKey
	{
		0x30, 0x81, 0x9D, 0x30, 0x0D, 0x06, 0x09, 0x2A, 0x86, 0x48, 0x86, 0xF7, 0x0D, 0x01, 0x01, 0x01,
		0x05, 0x00, 0x03, 0x81, 0x8B, 0x00, 0x30, 0x81, 0x87, 0x02, 0x81, 0x81, 0x00, 0xD8, 0x7B, 0xA2,
		0x45, 0x62, 0xF7, 0xC5, 0xD1, 0x4A, 0x0C, 0xFB, 0x12, 0xB9, 0x74, 0x0C, 0x19, 0x5C, 0x6B, 0xDC,
		0x7E, 0x6D, 0x6E, 0xC9, 0x2B, 0xAC, 0x0E, 0xB2, 0x9D, 0x59, 0xE1, 0xD9, 0xAE, 0x67, 0x89, 0x0C,
		0x2B, 0x88, 0xC3, 0xAB, 0xDC, 0xAF, 0xFE, 0x7D, 0x4A, 0x33, 0xDC, 0xC1, 0xBF, 0xBE, 0x53, 0x1A,
		0x25, 0x1C, 0xEF, 0x0C, 0x92, 0x3F, 0x06, 0xBE, 0x79, 0xB2, 0x32, 0x85, 0x59, 0xAC, 0xFE, 0xE9,
		0x86, 0xD5, 0xE1, 0x5E, 0x4D, 0x17, 0x66, 0xEA, 0x56, 0xC4, 0xE1, 0x06, 0x57, 0xFA, 0x74, 0xDB,
		0x09, 0x77, 0xC3, 0xFB, 0x75, 0x82, 0xB7, 0x8C, 0xD4, 0x7B, 0xB2, 0xC7, 0xF9, 0xB2, 0x52, 0xB4,
		0xA9, 0x46, 0x3D, 0x15, 0xF6, 0xAE, 0x6E, 0xE9, 0x23, 0x7D, 0x54, 0xC5, 0x48, 0x1B, 0xF3, 0xE0,
		0xB0, 0x99, 0x20, 0x19, 0x0B, 0xCF, 0xB3, 0x1E, 0x5B, 0xE5, 0x09, 0xC3, 0x3B, 0x02, 0x01, 0x11
	};
	const std::array<uint8_t, 32> sha256signature{
		0x6A, 0x09, 0xE6, 0x67, 0xBB, 0x67, 0xAE, 0x85, 0x3C, 0x6E, 0xF3, 0x72, 0xA5, 0x4F, 0xF5, 0x3A,
		0x51, 0x0E, 0x52, 0x7F, 0x9B, 0x05, 0x68, 0x8C, 0x1F, 0x83, 0xD9, 0xAB, 0x5B, 0xE0, 0xCD, 0x19
	};
};

